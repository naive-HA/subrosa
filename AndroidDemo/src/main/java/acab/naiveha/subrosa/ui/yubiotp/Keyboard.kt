package acab.naiveha.subrosa.ui.yubiotp

import android.util.Log

class Keyboard {
    val SHIFT = 0x80
    val US = mapOf(
        'a' to 0x04,
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'm' to 0x10,
        'n' to 0x11,
        'o' to 0x12,
        'p' to 0x13,
        'q' to 0x14,
        'r' to 0x15,
        's' to 0x16,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'w' to 0x1A,
        'x' to 0x1B,
        'y' to 0x1C,
        'z' to 0x1D,
        'A' to (0x04 or SHIFT),
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'M' to (0x10 or SHIFT),
        'N' to (0x11 or SHIFT),
        'O' to (0x12 or SHIFT),
        'P' to (0x13 or SHIFT),
        'Q' to (0x14 or SHIFT),
        'R' to (0x15 or SHIFT),
        'S' to (0x16 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
        'W' to (0x1A or SHIFT),
        'X' to (0x1B or SHIFT),
        'Y' to (0x1C or SHIFT),
        'Z' to (0x1D or SHIFT),
        '0' to 0x27,
        '1' to 0x1E,
        '2' to 0x1F,
        '3' to 0x20,
        '4' to 0x21,
        '5' to 0x22,
        '6' to 0x23,
        '7' to 0x24,
        '8' to 0x25,
        '9' to 0x26,
        '\t' to 0x2B,
        '\n' to 0x28,
        '!' to (0x1E or SHIFT),
        '"' to (0x34 or SHIFT),
        '#' to (0x20 or SHIFT),
        '$' to (0x21 or SHIFT),
        '%' to (0x22 or SHIFT),
        '&' to (0x24 or SHIFT),
        '\'' to 0x34,
        '`' to 0x35,
        '(' to (0x26 or SHIFT),
        ')' to (0x27 or SHIFT),
        '*' to (0x25 or SHIFT),
        '+' to (0x2E or SHIFT),
        ',' to 0x36,
        '-' to 0x2D,
        '.' to 0x37,
        '/' to 0x38,
        ':' to (0x33 or SHIFT),
        ';' to 0x33,
        '<' to (0x36 or SHIFT),
        '=' to 0x2E,
        '>' to (0x37 or SHIFT),
        '?' to (0x38 or SHIFT),
        '@' to (0x1F or SHIFT),
        '[' to 0x2F,
        '\\' to 0x32,
        ']' to 0x30,
        '^' to 0xA3,
        '_' to 0xAD,
        '{' to (0x2F or SHIFT),
        '}' to (0x30 or SHIFT),
        '|' to (0x32 or SHIFT),
        '~' to (0x35 or SHIFT),
        ' ' to 0x2C,
    )

    val UK = mapOf(
        'a' to 0x04,
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'm' to 0x10,
        'n' to 0x11,
        'o' to 0x12,
        'p' to 0x13,
        'q' to 0x14,
        'r' to 0x15,
        's' to 0x16,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'w' to 0x1A,
        'x' to 0x1B,
        'y' to 0x1C,
        'z' to 0x1D,
        'A' to (0x04 or SHIFT),
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'M' to (0x10 or SHIFT),
        'N' to (0x11 or SHIFT),
        'O' to (0x12 or SHIFT),
        'P' to (0x13 or SHIFT),
        'Q' to (0x14 or SHIFT),
        'R' to (0x15 or SHIFT),
        'S' to (0x16 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
        'W' to (0x1A or SHIFT),
        'X' to (0x1B or SHIFT),
        'Y' to (0x1C or SHIFT),
        'Z' to (0x1D or SHIFT),
        '0' to 0x27,
        '1' to 0x1E,
        '2' to 0x1F,
        '3' to 0x20,
        '4' to 0x21,
        '5' to 0x22,
        '6' to 0x23,
        '7' to 0x24,
        '8' to 0x25,
        '9' to 0x26,
        '\t' to 0x2B,
        '\n' to 0x28,
        '!' to (0x1E or SHIFT),
        '@' to (0x34 or SHIFT),
        '£' to (0x20 or SHIFT),
        '$' to (0x21 or SHIFT),
        '%' to (0x22 or SHIFT),
        '&' to (0x24 or SHIFT),
        '\'' to 0x34,
        '`' to 0x35,
        '(' to (0x26 or SHIFT),
        ')' to (0x27 or SHIFT),
        '*' to (0x25 or SHIFT),
        '+' to (0x2E or SHIFT),
        ',' to 0x36,
        '-' to 0x2D,
        '.' to 0x37,
        '/' to 0x38,
        ':' to (0x33 or SHIFT),
        ';' to 0x33,
        '<' to (0x36 or SHIFT),
        '=' to 0x2E,
        '>' to (0x37 or SHIFT),
        '?' to (0x38 or SHIFT),
        '"' to (0x1F or SHIFT),
        '[' to 0x2F,
        '#' to 0x32,
        ']' to 0x30,
        '^' to 0xA3,
        '_' to 0xAD,
        '{' to (0x2F or SHIFT),
        '}' to (0x30 or SHIFT),
        '~' to (0x32 or SHIFT),
        '¬' to (0x35 or SHIFT),
        ' ' to 0x2C,
    )

    val DE = mapOf(
        'a' to 0x04,
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'm' to 0x10,
        'n' to 0x11,
        'o' to 0x12,
        'p' to 0x13,
        'q' to 0x14,
        'r' to 0x15,
        's' to 0x16,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'w' to 0x1A,
        'x' to 0x1B,
        'y' to 0x1D,
        'z' to 0x1C,
        'A' to (0x04 or SHIFT),
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'M' to (0x10 or SHIFT),
        'N' to (0x11 or SHIFT),
        'O' to (0x12 or SHIFT),
        'P' to (0x13 or SHIFT),
        'Q' to (0x14 or SHIFT),
        'R' to (0x15 or SHIFT),
        'S' to (0x16 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
        'W' to (0x1A or SHIFT),
        'X' to (0x1B or SHIFT),
        'Y' to (0x1D or SHIFT),
        'Z' to (0x1C or SHIFT),
        '0' to 0x27,
        '1' to 0x1E,
        '2' to 0x1F,
        '3' to 0x20,
        '4' to 0x21,
        '5' to 0x22,
        '6' to 0x23,
        '7' to 0x24,
        '8' to 0x25,
        '9' to 0x26,
        '\t' to 0x2B,
        '\n' to 0x28,
        '!' to (0x1E or SHIFT),
        '"' to (0x1F or SHIFT),
        '#' to 0x32,
        '$' to (0x21 or SHIFT),
        '%' to (0x22 or SHIFT),
        '&' to (0x23 or SHIFT),
        '\'' to (0x32 or SHIFT),
        '(' to (0x25 or SHIFT),
        ')' to (0x26 or SHIFT),
        '*' to (0x30 or SHIFT),
        '+' to 0x30,
        ',' to 0x36,
        '-' to 0x38,
        '.' to 0x37,
        '/' to (0x24 or SHIFT),
        ':' to (0x37 or SHIFT),
        ';' to (0x36 or SHIFT),
        '<' to 0x64,
        '=' to (0x27 or SHIFT),
        '>' to (0x64 or SHIFT),
        '?' to (0x2D or SHIFT),
        '^' to 0x35,
        '_' to (0x38 or SHIFT),
        ' ' to 0x2C,
        '`' to (0x2D or SHIFT),
        '§' to (0x20 or SHIFT),
        '´' to 0x2E,
        'Ä' to (0x34 or SHIFT),
        'Ö' to (0x33 or SHIFT),
        'Ü' to (0x2F or SHIFT),
        'ß' to 0x2D,
        'ä' to 0x34,
        'ö' to 0x33,
        'ü' to 0x2F,
    )

    val FR = mapOf(
        'a' to 0x14,
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'm' to 0x33,
        'n' to 0x11,
        'o' to 0x12,
        'p' to 0x13,
        'q' to 0x04,
        'r' to 0x15,
        's' to 0x16,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'w' to 0x1D,
        'x' to 0x1B,
        'y' to 0x1C,
        'z' to 0x1A,
        'A' to (0x14 or SHIFT),
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'M' to (0x33 or SHIFT),
        'N' to (0x11 or SHIFT),
        'O' to (0x12 or SHIFT),
        'P' to (0x13 or SHIFT),
        'Q' to (0x04 or SHIFT),
        'R' to (0x15 or SHIFT),
        'S' to (0x16 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
        'W' to (0x1D or SHIFT),
        'X' to (0x1B or SHIFT),
        'Y' to (0x1C or SHIFT),
        'Z' to (0x1A or SHIFT),
        '0' to (0x27 or SHIFT),
        '1' to (0x1E or SHIFT),
        '2' to (0x1F or SHIFT),
        '3' to (0x20 or SHIFT),
        '4' to (0x21 or SHIFT),
        '5' to (0x22 or SHIFT),
        '6' to (0x23 or SHIFT),
        '7' to (0x24 or SHIFT),
        '8' to (0x25 or SHIFT),
        '9' to (0x26 or SHIFT),
        '\t' to 0x2B,
        '\n' to 0x28,
        ' ' to 0x2C,
        '!' to 0x38,
        '"' to 0x20,
        '$' to 0x30,
        '%' to (0x34 or SHIFT),
        '&' to 0x1E,
        '\'' to 0x21,
        '(' to 0x22,
        ')' to 0x2D,
        '*' to 0x31,
        '+' to (0x2E or SHIFT),
        ',' to 0x10,
        '-' to 0x23,
        '.' to (0x36 or SHIFT),
        '/' to (0x37 or SHIFT),
        ':' to 0x37,
        ';' to 0x36,
        '<' to 0x64,
        '=' to 0x2E,
        '_' to 0x25,
        '£' to (0x30 or SHIFT),
        '§' to (0x38 or SHIFT),
        '°' to (0x2D or SHIFT),
        '²' to 0x35,
        'µ' to (0x31 or SHIFT),
        'à' to 0x27,
        'ç' to 0x26,
        'è' to 0x24,
        'é' to 0x1F,
        'ù' to 0x34,
    )

    val IT = mapOf(
        '\t' to 0x2B,
        '\n' to 0x28,
        ' ' to 0x2C,
        '!' to (0x1E or SHIFT),
        '"' to (0x1F or SHIFT),
        '#' to 0x32,
        '$' to (0x21 or SHIFT),
        '%' to (0x22 or SHIFT),
        '&' to (0x23 or SHIFT),
        '\'' to 0x2D,
        '(' to (0x25 or SHIFT),
        ')' to (0x26 or SHIFT),
        '*' to 0x55,
        '+' to 0x30,
        ',' to 0x36,
        '-' to 0x38,
        '.' to 0x63,
        '/' to (0x24 or SHIFT),
        '0' to 0x27,
        '1' to 0x1E,
        '2' to 0x1F,
        '3' to 0x20,
        '4' to 0x21,
        '5' to 0x22,
        '6' to 0x23,
        '7' to 0x24,
        '8' to 0x25,
        '9' to 0x26,
        ':' to 0xB7,
        ';' to 0xB6,
        '<' to 0x64,
        '=' to (0x27 or SHIFT),
        '>' to (0x64 or SHIFT),
        '?' to (0x2D or SHIFT),
        '@' to 0x24,
        'A' to (0x04 or SHIFT),
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'M' to (0x10 or SHIFT),
        'N' to (0x11 or SHIFT),
        'O' to (0x12 or SHIFT),
        'P' to (0x13 or SHIFT),
        'Q' to (0x14 or SHIFT),
        'R' to (0x15 or SHIFT),
        'S' to (0x16 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
        'W' to (0x1A or SHIFT),
        'X' to (0x1B or SHIFT),
        'Y' to (0x1C or SHIFT),
        'Z' to (0x1D or SHIFT),
        '\\' to 0x35,
        '^' to 0xAE,
        '_' to 0xB8,
        '`' to (0x2D or SHIFT),
        'a' to 0x04,
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'm' to 0x10,
        'n' to 0x11,
        'o' to 0x12,
        'p' to 0x13,
        'q' to 0x14,
        'r' to 0x15,
        's' to 0x16,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'w' to 0x1A,
        'x' to 0x1B,
        'y' to 0x1C,
        'z' to 0x1D,
        '|' to 0xB5,
        '£' to 0xA0,
        '§' to 0xB2,
        '°' to 0xB4,
        'ç' to 0xB3,
        'è' to 0x2F,
        'é' to (0x2F or SHIFT),
        'à' to 0x34,
        'ì' to 0x2E,
        'ò' to 0x33,
        'ù' to 0x31,
    )

    val MODHEX = mapOf(
        'b' to 0x05,
        'c' to 0x06,
        'd' to 0x07,
        'e' to 0x08,
        'f' to 0x09,
        'g' to 0x0A,
        'h' to 0x0B,
        'i' to 0x0C,
        'j' to 0x0D,
        'k' to 0x0E,
        'l' to 0x0F,
        'n' to 0x11,
        'r' to 0x15,
        't' to 0x17,
        'u' to 0x18,
        'v' to 0x19,
        'B' to (0x05 or SHIFT),
        'C' to (0x06 or SHIFT),
        'D' to (0x07 or SHIFT),
        'E' to (0x08 or SHIFT),
        'F' to (0x09 or SHIFT),
        'G' to (0x0A or SHIFT),
        'H' to (0x0B or SHIFT),
        'I' to (0x0C or SHIFT),
        'J' to (0x0D or SHIFT),
        'K' to (0x0E or SHIFT),
        'L' to (0x0F or SHIFT),
        'N' to (0x11 or SHIFT),
        'R' to (0x15 or SHIFT),
        'T' to (0x17 or SHIFT),
        'U' to (0x18 or SHIFT),
        'V' to (0x19 or SHIFT),
    )

    val keyboards = mapOf(
        "en_US" to US,
        "en_UK" to UK,
        "de_DE" to DE,
        "fr_FR" to FR,
        "it_IT" to IT,
        "en_MODHEX" to MODHEX,
    )

    fun encode(password: String, keyboard: String): ByteArray {
        var scancodes = byteArrayOf()
        val keyboardMap = keyboards[keyboard] ?: throw IllegalStateException("Unknown keyboard $keyboard")
        password.forEachIndexed { index, char ->
            scancodes += (keyboardMap[char]?: throw IllegalStateException("Illegal character $char selected keyboard")).toByte()
        }
        return scancodes
    }
}